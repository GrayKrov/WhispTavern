// src/assets/styles/creators/krov/creatorkrov.scss
@use "/src/assets/styles/vars" as *;
@use "/src/assets/styles/mixins" as *;

/* match the navbar height from KrovNavBar.vue */
$krov-nav-h: 92px;

html,
body {
  background: #f7f7f7;
}

.cc-krov-root {
  background: #f7f7f7;
  color: #1a1a1a;
  min-height: 100vh;

  /* Added extra top space so text is well below nav */
  padding: calc(#{$krov-nav-h} + #{$sp-4}) $sp-2 $sp-4;

  font-family: "Inter", sans-serif;
  line-height: 1.6;
  position: relative;
  isolation: isolate;

  /* ambient grid */
  &::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    opacity: 0.05;
    background: repeating-linear-gradient(
        to right,
        #000 0 1px,
        transparent 1px 14px
      ),
      repeating-linear-gradient(to bottom, #000 0 1px, transparent 1px 14px);
    mix-blend-mode: multiply;
  }

  /* vignette */
  &::after {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background: radial-gradient(
      80% 60% at 50% 20%,
      transparent 0%,
      transparent 45%,
      rgba(0, 0, 0, 0.06) 100%
    );
  }
}

/* ---------------- CONTAINED CHAOS → SERENE MINIMAL ----------------
   Layers are intentionally grayscale + low-contrast. They *evolve*:
   noise → dots → orbits → mesh → guides, each fading out at different times.
   Only the vignette remains (final minimalist state).
-------------------------------------------------------------------- */
.bg-layer {
  position: fixed;
  inset: -12%;
  z-index: -1;
  pointer-events: none;
}

/* Vignette (stays) */
.bg-vignette {
  inset: 0;
  background: radial-gradient(
      56% 44% at 50% 8%,
      rgba(0, 0, 0, 0.05),
      transparent 60%
    ),
    radial-gradient(70% 60% at 50% 100%, rgba(0, 0, 0, 0.035), transparent 70%);
  mix-blend-mode: multiply;
}

/* Mesh (soft organic fields) */
.bg-mesh {
  opacity: 0.18;
  filter: blur(26px) contrast(1.02);
  background: conic-gradient(
      from 0deg at 22% 28%,
      rgba(0, 0, 0, 0.25),
      transparent 60%
    ),
    conic-gradient(from 90deg at 78% 24%, rgba(0, 0, 0, 0.18), transparent 62%),
    conic-gradient(from 180deg at 70% 78%, rgba(0, 0, 0, 0.16), transparent 58%),
    conic-gradient(from -60deg at 30% 72%, rgba(0, 0, 0, 0.14), transparent 55%);
  animation: mesh-shift 48s ease-in-out infinite alternate,
    fade-down 46s ease-in forwards;
}

/* Orbits (algorithmic rings hinting at systems) */
.bg-orbits {
  opacity: 0.22;
  background: radial-gradient(
        closest-side at 18% 32%,
        rgba(0, 0, 0, 0.22) 2px,
        transparent 2px
      )
      0 0/220px 220px,
    radial-gradient(
        closest-side at 72% 28%,
        rgba(0, 0, 0, 0.18) 2px,
        transparent 2px
      )
      0 0/260px 260px,
    radial-gradient(
        closest-side at 68% 74%,
        rgba(0, 0, 0, 0.16) 2px,
        transparent 2px
      )
      0 0/240px 240px;
  mask: radial-gradient(circle at 50% 50%, #000 40%, transparent 72%);
  animation: orbits-drift 36s ease-in-out infinite alternate,
    fade-down 38s ease-in forwards;
  filter: blur(8px);
}

/* Guides (architectural rails) */
.bg-guides {
  inset: 0;
  padding: 0 clamp(16px, 4vw, 40px);
  box-sizing: border-box;
  background: linear-gradient(90deg, rgba(0, 0, 0, 0.09) 1px, transparent 1px) 0
      0 / 56px 100%,
    linear-gradient(0deg, rgba(0, 0, 0, 0.09) 1px, transparent 1px) 0 0 / 100%
      56px;
  mix-blend-mode: multiply;
  opacity: 0.28;
  animation: fade-down 54s ease-in forwards;
}

/* Dots (halftone-ish field) */
.bg-dots {
  opacity: 0.14;
  background: radial-gradient(
      circle,
      rgba(0, 0, 0, 0.45) 1px,
      transparent 1.5px
    )
    0 0 / 14px 14px;
  mix-blend-mode: multiply;
  animation: fade-down 30s ease-in forwards;
  filter: blur(0.3px);
}

/* Noise (first to disappear) */
.bg-noise {
  inset: -15%;
  opacity: 0.09;
  filter: contrast(1.05);
  background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='160' height='160'>\
<filter id='n'><feTurbulence type='fractalNoise' baseFrequency='.9' numOctaves='2' stitchTiles='stitch'/></filter>\
<rect width='100%' height='100%' filter='url(%23n)' opacity='.85'/>\
</svg>");
  animation: noise-drift 12s steps(2) infinite alternate,
    fade-down 22s ease-in forwards;
}

/* Motion */
@keyframes mesh-shift {
  0% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: 0.18;
  }
  50% {
    transform: translate3d(-1%, -1%, 0) scale(1.02);
    opacity: 0.19;
  }
  100% {
    transform: translate3d(1%, 1%, 0) scale(1.03);
    opacity: 0.17;
  }
}
@keyframes orbits-drift {
  0% {
    transform: translate(0, 0) scale(1);
  }
  50% {
    transform: translate(-0.6%, -0.4%) scale(1.01);
  }
  100% {
    transform: translate(0.8%, 0.6%) scale(1.015);
  }
}
@keyframes noise-drift {
  from {
    transform: translate(0, 0);
  }
  to {
    transform: translate(-2%, -2%);
  }
}
@keyframes fade-down {
  to {
    opacity: 0;
  }
}

/* Reduced motion = immediate minimal */
@media (prefers-reduced-motion: reduce) {
  .bg-mesh,
  .bg-orbits,
  .bg-guides,
  .bg-dots,
  .bg-noise {
    animation: none;
    opacity: 0;
  }
}

/* ---------------- HERO ---------------- */
.hero {
  max-width: 1024px;
  margin: 0 auto $sp-4;
  padding: 0 $sp-2;
  text-align: center;
  position: relative;
}
.hero-title {
  font-weight: 800;
  letter-spacing: 0.005em;
  margin: 0 0 0.5rem 0;
  font-size: clamp(2.1rem, 1.25rem + 3.4vw, 3.6rem);
  color: #111;
}
.hero-sub {
  margin: 0;
  color: #4a4a4a;
  font-size: clamp(1rem, 0.95rem + 0.6vw, 1.25rem);
}

/* Minimal action (replay) */
.replay {
  margin-top: $sp-2;
  background: #111;
  color: #f5f5f5;
  border: 1px solid rgba(255, 255, 255, 0.14);
  border-radius: 999px;
  padding: 0.55rem 0.9rem;
  font-weight: 600;
  letter-spacing: 0.01em;
  cursor: pointer;
  transition: transform 120ms ease, background 120ms ease,
    border-color 120ms ease;
  will-change: transform;
  &:hover,
  &:focus-visible {
    outline: none;
    transform: translateY(-1px);
    background: #0d0d0d;
    border-color: rgba(255, 255, 255, 0.22);
  }
}

/* Divider that “settles” */
.hero + .projects::before {
  content: "";
  display: block;
  height: 1px;
  margin: $sp-4 auto $sp-3;
  width: min(960px, calc(100% - 2 * $sp-2));
  background: linear-gradient(
    90deg,
    transparent,
    rgba(0, 0, 0, 0.24),
    transparent
  );
  opacity: 0.75;
  animation: fade-down 18s ease-in forwards;
}

/* ---------------- PROJECTS ---------------- */
.projects {
  max-width: 1024px;
  margin: 0 auto;
  padding: 0 $sp-2;

  .section-title {
    text-align: center;
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: 0.01em;
    margin: 0 0 $sp-3 0;
    color: #222;
  }

  .project-grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: $sp-3;
    > * {
      grid-column: span 12;
    }
    @media (min-width: 768px) {
      > * {
        grid-column: span 6;
      }
    }
    @media (min-width: 1140px) {
      > * {
        grid-column: span 4;
      }
    }
  }

  .empty {
    text-align: center;
    color: #666;
    margin: $sp-3 0;
  }
}

/* Footer spacing (no beige band) */
.krov-footer {
  margin-top: 0 !important;
}

/* Responsive paddings */
@media (max-width: 768px) {
  .cc-krov-root {
    padding: calc(#{$krov-nav-h} + #{$sp-2}) $sp-2 $sp-4;
  }
}
@media (max-width: 640px) {
  .cc-krov-root {
    padding: calc(#{$krov-nav-h} + #{$sp-2}) $sp-1 $sp-3;
  }
}
